<!DOCTYPE html>
<html>
<head>
  <title>Activity</title>

  <script src="/js/jquery-3.2.1.min.js"></script>

  <script src="/js/moment.min.js"></script>
  <script src="/js/moment-timezone-with-data.min.js"></script>

    <!-- DataTables: https://datatables.net -->
    <link rel="stylesheet" type="text/css" href="/css/jquery.dataTables.min.css">
    <script type="text/javascript" charset="utf8" src="/js/jquery.dataTables.min.js"></script>

  <link href="/css/google-font-Roboto.css" rel="stylesheet">
  <link rel="stylesheet" type="text/css" href="/css/nahtube.css">

  <script>

    function populateActivityTableAjax(username) {
        console.log('AJAX populating activity table for "%s".', username);
        
        var existingtable = $('#datatable-activity').DataTable();
 
        if (existingtable) existingtable.destroy();
        
        var t = $('#datatable-activity').DataTable({
            ajax: {
                url: '/parents/activity/' + username + '.json',
                dataSrc: ''
            },
            columns: [
                { 
                    data: 'common_name'
                },
                { data: 'action' },
                { 
                    data: 'action_time',
                    render: function (data, type, row) {
                        // If display or filter data is requested, format the date
                        if ( type === 'display' || type === 'filter' ) {
                            //console.log(' 1 --> momented: ' + moment(data).format('MM/DD/YY h:mma dddd'));
                            //console.log(' 1 --> tzmented: ' + moment(data).tz('Pacific/Honolulu').format('MM/DD/YY h:mma dddd')); // something to do with time zones between the app and db if on different boxes
                            //return moment(data).tz('America/New_York').format('MM/DD/YY h:mma dddd');
                            return moment(data).format('MM/DD/YY h:mma dddd');
                        }

                        // Otherwise the data type requested (`type`) is type detection or
                        // sorting data, so just return the unaltered source data
                        return data;
                    }
                },
                { 
                    // catch-all column, kinda
                    // channel name and link
                    //    ... or ...
                    // search string
                    className: "dt-center",
                    data: 'details_full',
                    render: function (data, type, row) {
                        if (row.action == "search") {
                            return formatDetails(row.details);
                        }

                        return data ? formatChannel(data) : '';
                    }
                },
                { 
                    data: 'details',
                    visible: false,
                    render: function (data, type, row) {
                        return data ? formatDetails(data) : '';
                    }
                },
                { 
                    //video thumbnail and link
                    className: "dt-center",
                    data: 'details_full',
                    render: function (data, type, row) {
                        // if (row.details) {
                        //     if (row.details.videoId) {
                        //         console.log(' ' + row.details.videoId);
                        //     }
                        // }

                        return data ? formatVideo(data, row.details.videoId) : '';
                    }
                }
            ],
            "columnDefs": [
                { 
                    "targets": 0,
                    "width": "5%", 
                    "searchable": false,
                    "orderable": false
                },
                { 
                    "targets": 1,
                    "width": "10%"
                }
            ],
            "order": [[ 2, "desc" ]],
            "lengthMenu": [ [10, 25, 50, 75, 100, -1], [10, 25, 50, 75, 100, "All"] ],
            "pageLength": 50
        });
    }

    // NOT USED - prefer AJAX load above
    function populateActivityTable(username) {
        var t = $('#datatable-activity').DataTable();

        $.get( "/parents/activity/" + username + '.json', function( data ) {
            $( ".result" ).html( data );

            $.each(data, function(index, entry) {
                const {
                    username,
                    id,
                    common_name,
                    action,
                    action_time,
                    channel_id,
                    channel_name,
                    details,
                    details_full
                } = entry;
                
                t.row.add([
                    common_name,
                    action,
                    moment(action_time).tz('America/New_York').format('ha z'),
                    JSON.stringify({"channelName":channel_name, "channelId": channel_id}),
                    details ? formatDetails(details) : '',
                    channel_id,
                    details_full
                ]).draw(false);
            });
        });
    }

    function formatDetails(details) {
        if (details.videoId) return details.videoId;
        if (details.searchstring) return details.searchstring;

        return JSON.stringify(details);
    }

    function formatVideo(item, videoId) {
        if (item.snippet) {
            var vidHref = videoId ? '<a href="https://www.youtube.com/watch?v=' + videoId + '" target="_blank"">' : ''
            var vidDiv = '<img src="' + item.snippet.thumbnails.default.url + '"> ' + 
            '<div class="video-link">' + 
                vidHref +
                item.snippet.title + 
            '</a></div>';

            return vidDiv;
        }
    }

    function formatChannel(item) {
        if (item) {
            var chDiv = '<div><a class="video-link" href="https://www.youtube.com/channel/' + item.snippet.channelId + '" target="_blank">' + 
                item.snippet.channelTitle + '</a></div>';

            return chDiv;
        }
    }

  </script>
</head>

<body>
    <!-- TODO: restore login check -->

        <div id="user-select-container">
            <select id="user-select"></select>
            <!-- <select id="user-select" class="selectpicker"></select> -->
            <button id="login" onclick="populateActivityTableAjax($('#user-select').val())">Activity</button>
        </div>

    <script>
        // AJAX call to populate the user-select field above
        $.get( "/users/role/child", function( data ) {
            $( ".result" ).html( data );
    
            $.each(JSON.parse(data), function(index, entry) {
                option = $('<option value="' + entry.username + '">' + entry.common_name + '</option>');
                $("#user-select").append(option);
            });
        });
    </script>

    <table id="datatable-activity" class="display" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th>Name</th>
                <th>Action</th>
                <th>Time</th>
                <th>Channel / Search</th>
                <th>Details</th>
                <th>Video</th>
            </tr>
        </thead>
    </table>
  
</body>

</html>