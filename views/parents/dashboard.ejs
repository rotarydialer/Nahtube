<!DOCTYPE html>
<html>

<head>
  <title><%= title %>: Parent Dashboard</title>
  <div className="parent-nav">Dashboard | <a href='/parents/users'>Users</a> | <a href='/parents/activity/videos'>Videos</a> | <a href='/parents/activity'>Activity</a></div>

  <script src="/js/jquery-3.2.1.min.js"></script>
  <script src="/js/moment.min.js"></script>

  <!-- bootstrap 4.0.0 -->      
  <link rel="stylesheet" href="/css/bootstrap400/bootstrap.min.css">
  <script src="/js/bootstrap400/tether.min.js"></script>
  <script src="/js/bootstrap400/holder.min.js"></script>
  <script src="/js/bootstrap400/bootstrap.min.js"></script>

  <link href="/css/google-font-Roboto.css" rel="stylesheet">
  <link rel="stylesheet" type="text/css" href="/css/nahtube.css">

  <script src="/js/Chart.bundle.js"></script>
  <script src="/js/moment.min.js"></script>

  <script src="/js/daterangepicker.js"></script>
  <link rel="stylesheet" type="text/css" href="/css/daterangepicker.css">

  <script defer src="/js/fontawesome-all.min.js"></script>
  <link rel="stylesheet" type="text/css" href="/css/fa-svg-with-js.css">

    <style>
        body {
            margin-left: 20px;
            margin-right: 20px;
        }

        div.avatar {
            margin: 10px;
            float: left;
        }

        #logo-icon-container {
            width: 100px;
            height: 24px;
        }

        #topbar {
            border: 0px;
            border-bottom: 1px;
            border-color: #efefef;
            border-style: solid;
            padding-bottom: 4px;
        }

        .chart-container {
            margin-left: 15px;
            margin-bottom: 10px;
            position: relative; 
            width:70vw
        }

        .dateselect {
            width: 110px;
        }

        .date-btn-next-prev {
            font-size: 2em;
            color: #2655a0;
        }
    </style>

  <script>
    function clearAll() {
        $("#channels-allowed-list").empty();
        $("#activity-list").empty();
    }

    function getChannelsForUser(userLoggedIn) {
        clearAll()

        // AJAX call to populate the Allowed Channels div
        $.get( "/channels/" + userLoggedIn, function( data ) {
            $( ".result" ).html( data );
            $.each(data, function(index, entry) {
                option = '<div>' + 
                    ((index+1) + ': <a href="/youtube/videos/' + entry.channel_id + '">' + 
                    '<img src="' + entry.channel_data.snippet.thumbnails.default.url + '" align="middle" width="66" height="66"> ' +
                    entry.channel_name + '</a> </div>');
                $("#channels-allowed-list").append(option);
            });
        });
    }
  </script>
</head>

<body>
    <div class="row">
        <!-- <div class="avatar">
            <% if (user.username) { %>
                <a href="/"><img src="/images/avatars/<%= user.username %>-avatar-sm.png"></a>
            <% } %>
        </div> -->
    </div>

    <div id="content-container" class="row">
        <table border="0">
            <tr>
                <td>
                    <div class="date-btn-next-prev">
                        <i class="fas fa-angle-left" onclick="prevDate()"></i>
                    </div>
                </td>
                <td align="center">
                    <input type="text" id="reportDate" onchange="initBarChartViewsByDate()" class="form-control dateselect" />
                </td>
                <td>
                    <div class="date-btn-next-prev">
                        <i class="fas fa-angle-right" onclick="nextDate()"></i>
                    </div>
                </td>
            </tr>
        </table>
    </div>

    <div class="row">
        <div class="chart-container">
            <canvas id="viewsByUser"></canvas>
        </div>
    </div>

    <div class="row">
        <div class="chart-container">
            <canvas id="viewsLastWeek" width="740" height="200"></canvas>
        </div>
    </div>

    <script>
        // initialize the report date picker
        $(function () {
            $('#reportDate').daterangepicker({
                singleDatePicker: true,
                showDropdowns: true
            });

            $('#reportDate').val(moment({}).startOf('day').format('MM/DD/YYYY'));
        });

        // Get the context of the canvas element we want to select
        var ctx = document.getElementById("viewsByUser").getContext("2d");

        // Instantiate new chart
        var viewsByUser = new Chart(ctx , {
            type: "bar" 
        });

        // Weekly line chart
        function initLineChartWeeklyViews() {
            // WIP per: http://microbuilder.io/blog/2016/01/10/plotting-json-data-with-chart-js.html
            // Get the context of the canvas element we want to select
            var ctxl = document.getElementById("viewsLastWeek").getContext("2d");

            var weeklyViewsData = {
                labels: ["January", "February", "March", "April", "May", "June", "July"],
                datasets: [
                {
                    label: "Daughter",
                    fillColor: "rgba(220,220,220,0.2)",
                    strokeColor: "rgba(220,220,220,1)",
                    pointColor: "rgba(220,220,220,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(220,220,220,1)",
                    data: [65, 59, 80, 81, 56, 55, 40]
                },
                {
                    label: "Son",
                    fillColor: "rgba(151,187,205,0.2)",
                    strokeColor: "rgba(151,187,205,1)",
                    pointColor: "rgba(151,187,205,1)",
                    pointStrokeColor: "#fff",
                    pointHighlightFill: "#fff",
                    pointHighlightStroke: "rgba(151,187,205,1)",
                    data: [28, 48, 40, 19, 86, 27, 90]
                }
                ]
            }

            var viewsLastWeekChart = new Chart(ctxl, {
                type: "line" 
            });
            viewsLastWeekChart.data = weeklyViewsData;
            viewsLastWeekChart.update();

        }
        
        
        function initBarChartViewsByDate() {
            var selectedDate = $('#reportDate').val() || '';
            var selectedDateMoment = moment(selectedDate);
            queryDate = selectedDate ? moment(selectedDate).utc().format("MM-DD-YYYY") : '';

            //console.log('Selected date: ', selectedDate);
            var queryUrl = '/reports/user/summary/videos/watched/date/' + queryDate;
            console.log(queryUrl);

            var jsonData = $.ajax({
                url: '/reports/user/summary/videos/watched/date/' + queryDate,
                dataType: 'json',
            }).done(function (results) {

                //console.log(results);

                // Split timestamp and data into separate arrays
                var labels = [], data = [];
                var labeldate;
                results["results"].forEach(function (result, index) {
                    labeldate = selectedDateMoment.format("l") || '';
                    labels.push(result.common_name);
                    data.push(parseFloat(result.count));
                });

                // Create the chart.js data structure using 'labels' and 'data'
                var reportData = {
                    labels: labels,
                    datasets: [{
                        label: 'Videos watched ' + labeldate,
                        data: data,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                };

                // Get the context of the canvas element we want to select
                //var ctx = document.getElementById("viewsByUser").getContext("2d");

                // Instantiate new chart
                // var viewsByUser = new Chart(ctx , {
                //     type: "bar",
                //     data: reportData, 
                // });

                viewsByUser.labels = labels;
                viewsByUser.data = reportData;
                viewsByUser.update();
            });
        }

        function nextDate() {
            var currentSelectedDate = moment($('#reportDate').val());
            var nextDate = currentSelectedDate.add(1, 'days');

            $('#reportDate').val(nextDate.format('MM/DD/YYYY'));
            initBarChartViewsByDate();
        }

        function prevDate() {
            var currentSelectedDate = moment($('#reportDate').val());
            var prevDate = currentSelectedDate.subtract(1, 'days');

            $('#reportDate').val(prevDate.format('MM/DD/YYYY'));
            initBarChartViewsByDate();
        }

        function drawLineChart() {

            var jsonData = $.ajax({
                url: '/reports/user/summary/videos/watched/date/2018-02-25',
                dataType: 'json',
            }).done(function (results) {

                //console.log(results);

                // Split timestamp and data into separate arrays
                var labels = [], data = [];
                results["results"].forEach(function (result) {
                    labels.push(result.common_name);
                    data.push(parseFloat(result.count));
                });

                console.log(labels);
                console.log(data);

                // Create the chart.js data structure using 'labels' and 'data'
                var tempData = {
                    labels: labels,
                    datasets: [{
                        fillColor: "rgba(151,187,205,0.2)",
                        strokeColor: "rgba(151,187,205,1)",
                        pointColor: "rgba(151,187,205,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(151,187,205,1)",
                        data: data
                    }]
                };

                // Get the context of the canvas element we want to select
                var ctx = document.getElementById("lineChart").getContext("2d");

                // Instantiate new chart
                var lineChart = new Chart(ctx , {
                    type: "line",
                    data: data, 
                });
            });
        }

        initBarChartViewsByDate();
        initLineChartWeeklyViews();
        
        // Custom range:
        /*
        $(function () {

            var start = moment().subtract(29, 'days');
            var end = moment();

            function cb(start, end) {
                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
            }

            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);

            cb(start, end);

        });
        */
    </script>

    <!-- Channel management -->

    <div class="row">
        <div id="user-select-container">
            <select id="user-select"></select>
        </div>
    </div>

    <script>
        // AJAX call to populate the user-select field above
        $.get( "/users/role/child", function( data ) {
            $( ".result" ).html( data );
    
            $.each(JSON.parse(data), function(index, entry) {
                option = $('<option value="' + entry.username + '">' + entry.common_name + '</option>');
                $("#user-select").append(option);
            });
        });
    </script>

</body>

</html>